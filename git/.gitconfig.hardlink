[user]
	name = Mr. Is
	email = isaac.ardis@gmail.com
[core]
	excludesfile = /Users/ia/.gitignore_global
[push]
    default = current
[pull]
    default = current
[merge]
    tool = kdiff3
[alias]
	# Undo all changes since last commit and leave no evidence.
	wipe = !git stash && git stash drop
	# Undo your last commit as though you had never made it. 
	uncommit = reset --soft HEAD~
	save = !git add -A && git commit -m 'SAVE'
        # Could use this in conjunction with uncommit to store intermediate changes without stashing.
	wip = commit -am "WIP"
	# Not that useful now that [push]default is set to current.
        pushit = "!git push origin \"$(git rev-parse --abbrev-ref HEAD)\""

	# Diff with stats. 
        diffstats = diff --stat -r
	# Diff show changes. 
	changes = diff --name-status -r
	
	## Loggers
	# Short and sweet. 
	brief = !git --no-pager log --oneline -n 10

	# As bespoke.
	recent-branches = for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname)' refs/heads refs/remotes

	# Recent branch action by last commit per. I think.
	recently = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
	
	# List files that were changed. 
	# I don't use these nearly as much as $ gl and $ glp aliases. 
	lg = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	# Flow da chart. 
	ll = log --graph --pretty=format:'%Cred%h%Creset %C(yellow)%an%d%Creset %Cgreen(%cr)%Creset %s' --date=relative
